import numpy as np
import Flux_cal_object
import ThEcoli
from assimulo.solvers import CVode
from assimulo.problem import Explicit_Problem
import importlib
import collections
import pdb
import matplotlib.pyplot as plt

plt.switch_backend('agg')

# Everything

# flux names (ordered as in the flux_cal Fortran library)
def flux_names():
    fn = {"v_PGI",
          "v_PFK",
          "v_FBA",
          "v_TPI",
          "v_GDH",
          "v_PGK",
          "v_GPM",
          "v_ENO",
          "v_PYK",
          "v_ZWF",
          "v_PGL",
          "v_GND",
          "v_RPE",
          "v_RPI",
          "v_X5P_GAP_TKT",
          "v_F6P_E4P_TKT",
          "v_S7P_R5P_TKT",
          "v_F6P_GAP_TAL",
          "v_S7P_E4P_TAL",
          "v_FBP",
          "v_PPC",
          "v_PCK",
          "v_PPS",
          "v_MAD",
          "v_PDH",
          "v_GLT",
          "v_ACN_1",
          "v_ACN_2",
          "v_ICD",
          "v_LPD",
          "v_SK",
          "v_SDH",
          "v_FUMA",
          "v_MQO",
          "v_MDH",
          "v_ACEA",
          "v_ACEB",
          "v_ACEK_1",
          "v_ACEK_2",
          "v_EDD",
          "v_EDA",
          "v_NDHI",
          "v_NDHII",
          "v_NADPH_req",
          "v_SQR",
          "v_PNT",
          "v_CYTBO",
          "v_ADK",
          "v_ATP_SYN",
          "v_CYA",
          "v_ATP_NGAM",
          "v_DOS",
          "v_ACK",
          "v_ACS",
          "v_PTA",
          "v_PTS_0",
          "v_PTS_4",
          "v_GLC_feed",
          "v_ACE_OUT",
          "v_XCH_PYR",
          "v_XCH_SUC",
          "v_PTS_1",
          "v_PTS_2",
          "v_PTS_3",
          "v_XCH_GLC",
          "v_XCH_ACE",
          "v_XCH_P",
          "v_PIT",
          "v_GROWTH"}
    return fn


# initial values of species concentrations for ODE calculation
def get_initial():
    metabolite_names = ["ACCOA", "ACEx", "ACO", "ACP", "ADP", "AKG", "AMP", "ASP", "ATP", "BPG", "CAMP", "CIT", "COA",
                        "CYS", "DAP", "E4P", "ei", "eiia", "eiiaP", "eiicb", "eiicbP", "eiP", "F6P", "FDP", "FUM",
                        "G6P", "GAP", "GL6P", "GLCx", "GLX", "HCO3", "hpr", "hprP", "icd", "icdP", "ICIT", "KDPG",
                        "MAL", "MG", "MN", "NAD", "NADH", "NADP", "NADPH", "OAA", "P", "PEP", "PGA2", "PGA3", "PGN",
                        "PYR", "PYRx", "Q", "QH2", "R5P", "RU5P", "S7P", "SUC", "SUCCOA", "SUCx", "tal", "talC3",
                        "tkt", "tktC2", "X5P", "Px", "Pp", "GLCp", "ACEp", "ACE", "Hc", "Hp", "FAD", "FADH2", "O2",
                        "FEED"]
    initial_values_dict = dict(ACCOA=0.1548173764, ACEx=0.0001867971552, ACO=0.03214729264, ACP=0.01439535857,
                               ADP=0.5984544755, AKG=0.598554801, AMP=0.1863187692, ASP=1.17, ATP=2.572433084,
                               BPG=0.06542590303, CAMP=0.9226938341, CIT=0.08952657967, COA=0.5, CYS=0.085,
                               DAP=0.4370790627, E4P=0.1312729259, ei=0.0003340731108, eiia=0.01420212422,
                               eiiaP=0.4805682755, eiicb=4.719106217e-05, eiicbP=0.0003426212993, eiP=0.006381102662,
                               F6P=0.2617121176, FDP=0.281787796, FUM=0.2130709631, G6P=0.8608922585, GAP=0.117179227,
                               GL6P=0.0032650871, GLCx=0.005266615038, GLX=0.008806748375, HCO3=1.4, hpr=0.000191215565,
                               hprP=0.005250808044, icd=0.0005426986032, icdP=0.05145730192, ICIT=0.1057707819,
                               KDPG=0.08685627382, MAL=1.031918532, MG=1, MN=0.3, NAD=1.411601623, NADH=0.1583983774,
                               NADP=0.1679743771, NADPH=0.08902562252, OAA=0.127903075, P=9.762437893, PEP=0.9971207428,
                               PGA2=0.3784427564, PGA3=0.6965408824, PGN=0.1317347423, PYR=0.2369229285, PYRx=0,
                               Q=0.3261685192, QH2=0.6738314804, R5P=0.1068733821, RU5P=0.3419353507, S7P=0.1420394169,
                               SUC=0.2161898471, SUCCOA=0.0411139226, SUCx=0, tal=0.002781317101, talC3=0.05721868286,
                               tkt=0.01382962037, tktC2=0.05617037954, X5P=0.5061562333, Px=10, Pp=9.999693539,
                               GLCp=0.00403337107, ACEp=0.0001867971552, ACE=0.0001867971552, Hc=3.16227766e-05,
                               Hp=5.374238012e-05, FAD=0.2539299953, FADH2=0.7460700048, O2=0.21, FEED=0.230)
    initial_value_list = [initial_values_dict[i_name] for i_name in metabolite_names]
    # yini_list = np.fromiter(yini.values(), dtype=float)
    # y0 = [0.1548173764, 0.0001867971552, 0.03214729264, 0.01439535857, 0.5984544755, 0.598554801, 0.1863187692, 1.17, 2.572433084, 0.06542590303, 0.9226938341, 0.08952657967, 0.5, 0.085, 0.4370790627, 0.1312729259, 0.0003340731108, 0.01420212422, 0.4805682755, 4.719106217e-05, 0.0003426212993, 0.006381102662, 0.2617121176, 0.281787796, 0.2130709631, 0.8608922585, 0.117179227, 0.0032650871, 0.005266615038, 0.008806748375, 1.4, 0.000191215565, 0.005250808044, 0.0005426986032, 0.05145730192, 0.1057707819, 0.08685627382, 1.031918532, 1, 0.3, 1.411601623, 0.1583983774, 0.1679743771, 0.08902562252, 0.127903075, 9.762437893, 0.9971207428, 0.3784427564, 0.6965408824, 0.1317347423, 0.2369229285, 0, 0.3261685192, 0.6738314804, 0.1068733821, 0.3419353507, 0.1420394169, 0.2161898471, 0.0411139226, 0, 0.002781317101, 0.05721868286, 0.01382962037, 0.05617037954, 0.5061562333, 10, 9.999693539, 0.00403337107, 0.0001867971552, 0.0001867971552, 3.16227766e-05, 5.374238012e-05, 0.2539299953, 0.7460700048, 0.21, 0.23]
    return initial_value_list


# all parameters
def get_some_params():
    all_parameters = {'pgi': dict(v_PGI_Keq=0.36, v_PGI_KmF6P=0.147, v_PGI_KmG6P=0.28, v_PGI_KmPEP=1.999,
                                  v_PGI_KmPGN=0.515958, v_PGI_Vmax=2.32456,),
                      'pfk': dict(v_PFK_KefrADP=0.0735264, v_PFK_KefrPEP=19.98, v_PFK_KeftADP=9.009,
                                  v_PFK_KeftPEP=0.26026, v_PFK_Keq=1998, v_PFK_KirADP=54.945, v_PFK_KirATP=0.000024975,
                                  v_PFK_KirF6P=1.84615, v_PFK_KirFDP=0.045954, v_PFK_KitADP=80.08,
                                  v_PFK_KitATP=0.014014, v_PFK_KitF6P=0.00856856, v_PFK_KitFDP=50.5505,
                                  v_PFK_KmrADP=0.690009, v_PFK_KmrATPMg=8.12187E-05, v_PFK_KmrF6P=2.05205E-05,
                                  v_PFK_KmrFDP=10.01, v_PFK_KmtADP=2.002, v_PFK_KmtATPMg=3.34334, v_PFK_KmtF6P=32.967,
                                  v_PFK_KmtFDP=9.99, v_PFK_L0=14.0851, v_PFK_Vmax=0.185253, v_PFK_Wr=0.0237041,
                                  v_PFK_Wt=0.146735, v_PFK_n=4)}
    params = collections.OrderedDict(
        USELESS=0.0,
        v_FEED=0.23,
        v_PGI_Keq=0.36,
        v_PGI_KmF6P=0.147,
        v_PGI_KmG6P=0.28,
        v_PGI_KmPEP=1.999,
        v_PGI_KmPGN=0.515958,
        v_PGI_Vmax=2.32456,
        v_PFK_KefrADP=0.0735264,
        v_PFK_KefrPEP=19.98,
        v_PFK_KeftADP=9.009,
        v_PFK_KeftPEP=0.26026,
        v_PFK_Keq=1998,
        v_PFK_KirADP=54.945,
        v_PFK_KirATP=0.000024975,
        v_PFK_KirF6P=1.84615,
        v_PFK_KirFDP=0.045954,
        v_PFK_KitADP=80.08,
        v_PFK_KitATP=0.014014,
        v_PFK_KitF6P=0.00856856,
        v_PFK_KitFDP=50.5505,
        v_PFK_KmrADP=0.690009,
        v_PFK_KmrATPMg=8.12187E-05,
        v_PFK_KmrF6P=2.05205E-05,
        v_PFK_KmrFDP=10.01,
        v_PFK_KmtADP=2.002,
        v_PFK_KmtATPMg=3.34334,
        v_PFK_KmtF6P=32.967,
        v_PFK_KmtFDP=9.99,
        v_PFK_L0=14.0851,
        v_PFK_Vmax=0.185253,
        v_PFK_Wr=0.0237041,
        v_PFK_Wt=0.146735,
        v_PFK_n=4,
        v_FBA_Keq=0.18981,
        v_FBA_KmDAP=0.13001,
        v_FBA_KmFDP=0.12012,
        v_FBA_KmGAP=0.13001,
        v_FBA_KmPEP=0.5,
        v_FBA_Vmax=21.6978,
        v_TPI_Keq=0.270203,
        v_TPI_KmDAP=0.01,
        v_TPI_KmGAP=1.89301,
        v_TPI_Vmax=24.1843,
        v_GDH_Keq=20,
        v_GDH_KmBPG=0.2,
        v_GDH_KmGAP=2.47265,
        v_GDH_KmNAD=0.0110454,
        v_GDH_KmNADH=3.69797,
        v_GDH_KmP=0.017,
        v_GDH_Vmax=8.66573,
        v_PGK_Keq=99.9925,
        v_PGK_KmADPMg=0.085416,
        v_PGK_KmATPMg=3.47737,
        v_PGK_KmBPG=0.0113296,
        v_PGK_KmPGA3=2.45722,
        v_PGK_Vmax=16.1089,
        v_GPM_Keq=0.565818,
        v_GPM_KmPGA2=1.9153,
        v_GPM_KmPGA3=0.115,
        v_GPM_Vmax=10.9934,
        v_ENO_Keq=2.999,
        v_ENO_KmPEP=0.1,
        v_ENO_KmPGA2=0.1,
        v_ENO_Vmax=11.7189,
        v_PYK_KefrFDP=0.449149,
        v_PYK_KefrG6P=0.158746,
        v_PYK_KefrGL6P=0.150482,
        v_PYK_KefrR5P=9.33254,
        v_PYK_KefrRU5P=1.53591,
        v_PYK_KefrS7P=0.0785955,
        v_PYK_KefrX5P=0.677374,
        v_PYK_KeftATP=3.69117,
        v_PYK_KeftSUCCOA=8.26406,
        v_PYK_KirADP=0.517585,
        v_PYK_KirATP=96.0333,
        v_PYK_KirPEP=0.181056,
        v_PYK_KirPYR=15.1403,
        v_PYK_KirPyrATP=230.781,
        v_PYK_KitADP=0.224911,
        v_PYK_KitATP=0.039564,
        v_PYK_KitPEP=0.465672,
        v_PYK_KitPYR=0.2499,
        v_PYK_KitPyrATP=11.3691,
        v_PYK_KmrADPMg=0.326144,
        v_PYK_KmrPEP=5.56368E-07,
        v_PYK_KmtADPMg=0.054678,
        v_PYK_KmtPEP=0.11475,
        v_PYK_L0=50.4818,
        v_PYK_Vmax=0.74716,
        v_PYK_n=4,
        v_ZWF_KdG6P=0.192,
        v_ZWF_KdGL6P=0.02,
        v_ZWF_Keq=60000000000,
        v_ZWF_KmG6P=0.118525,
        v_ZWF_KmGL6P=0.328629,
        v_ZWF_KmNADP=0.0274,
        v_ZWF_KmNADPH=0.0168,
        v_ZWF_Vmax=0.2658,
        v_PGL_Keq=42.7572,
        v_PGL_KiG6P=2.0001,
        v_PGL_KmGL6P=0.022977,
        v_PGL_KmPGN=9.99,
        v_PGL_Vmax=11.5967,
        v_GND_KdHCO3=58.8951,
        v_GND_KdHCO3NADPH=9.7257,
        v_GND_KdNADP=0.116989,
        v_GND_KdNADPH=0.00340034,
        v_GND_KdRu5P=0.0440044,
        v_GND_KefATP=0.0650065,
        v_GND_KefFbP=0.0129987,
        v_GND_KefNADPATP=0.139986,
        v_GND_KefNADPFbP=0.00519948,
        v_GND_Keq=49.962,
        v_GND_KmHCO3=6.41899,
        v_GND_KmNADP=0.049,
        v_GND_KmNADPH=68.3828,
        v_GND_KmPGN=0.093,
        v_GND_KmRU5P=45.1977,
        v_GND_Vmax=4.08105,
        v_RPE_Keq=1.5015,
        v_RPE_KmRU5P=0.872522,
        v_RPE_KmX5P=0.893607,
        v_RPE_Vmax=6.00103,
        v_RPI_Keq=0.330093,
        v_RPI_KmE4P=0.67067,
        v_RPI_KmR5P=3.09715,
        v_RPI_KmRU5P=4.40263,
        v_RPI_Vmax=8,
        v_X5P_GAP_TKT_Keq=1.001,
        v_X5P_GAP_TKT_kcat=40,
        v_F6P_E4P_TKT_Keq=0.5005,
        v_F6P_E4P_TKT_kcat=40.0002,
        v_S7P_R5P_TKT_Keq=0.33033,
        v_S7P_R5P_TKT_kcat=199.979,
        v_F6P_GAP_TAL_Keq=0.11011,
        v_F6P_GAP_TAL_kcat=119.992,
        v_S7P_E4P_TAL_Keq=26.6266,
        v_S7P_E4P_TAL_kcat=99.9991,
        v_FBP_KirAMP=0.00122122,
        v_FBP_KirAMPFDP=0.256256,
        v_FBP_KirF6P=1.12112,
        v_FBP_KirF6PMg=0.384615,
        v_FBP_KirFDP=1.35327,
        v_FBP_KirFDPMg=0.75924,
        v_FBP_KirFDPMgMg=0.356356,
        v_FBP_KirP=3.16316,
        v_FBP_KirPF6P=6.60538,
        v_FBP_KirPF6PMg=48.4484,
        v_FBP_KirPMg=0.856,
        v_FBP_KitAMP=0.000255,
        v_FBP_KitAMPFDP=690,
        v_FBP_KitF6P=0.304,
        v_FBP_KitF6PMg=315,
        v_FBP_KitFDP=0.043101,
        v_FBP_KitFDPMg=0.00642,
        v_FBP_KitFDPMgMg=100,
        v_FBP_KitP=0.642,
        v_FBP_KitPF6P=0.00689,
        v_FBP_KitPF6PMg=16.5,
        v_FBP_KitPMg=539,
        v_FBP_KmrFDP=0.0636141,
        v_FBP_KmrMg=0.039039,
        v_FBP_KmtFDP=0.00001,
        v_FBP_KmtMg=55.055,
        v_FBP_L0=0.000815,
        v_FBP_Vmax=0.215583,
        v_FBP_n=4,
        v_PPC_KdrOAA=4.35404,
        v_PPC_KdrPEP=655.591,
        v_PPC_KdtOAA=17.9127,
        v_PPC_KdtPEP=0.0121991,
        v_PPC_KefrACCOA=0.140029,
        v_PPC_KefrASP=0.389183,
        v_PPC_KefrCIT=34.4277,
        v_PPC_KefrCYS=0.000448843,
        v_PPC_KefrFDP=9.99126,
        v_PPC_KefrFDPACCOA=0.0156251,
        v_PPC_KefrFUM=2.7475,
        v_PPC_KefrMAL=0.23002,
        v_PPC_KefrSUC=22.9834,
        v_PPC_KeftACCOA=1.27598,
        v_PPC_KeftASP=27.4729,
        v_PPC_KeftCIT=0.521945,
        v_PPC_KeftCYS=0.977374,
        v_PPC_KeftFDP=13.2064,
        v_PPC_KeftFDPACCOA=47.7563,
        v_PPC_KeftFUM=9.76119,
        v_PPC_KeftMAL=0.737283,
        v_PPC_KeftSUC=107.18,
        v_PPC_Keq=149.705,
        v_PPC_KmrHCO3=0.00219811,
        v_PPC_KmrOAA=13.0469,
        v_PPC_KmrP=0.663356,
        v_PPC_KmrPEP=3.20089,
        v_PPC_KmtHCO3=0.00220031,
        v_PPC_KmtOAA=6.80995,
        v_PPC_KmtP=0.285131,
        v_PPC_KmtPEP=5.12497,
        v_PPC_L0=6.37209E-06,
        v_PPC_Vmax=21.439,
        v_PPC_n=4.00319,
        v_PCK_Keq=1.88166,
        v_PCK_KmADP=0.04997,
        v_PCK_KmATP=0.0600418,
        v_PCK_KmHCO3=2.6319,
        v_PCK_KmOAA=0.66966,
        v_PCK_KmPEP=0.0699833,
        v_PCK_Vmax=8.08777,
        v_PPS_KdAMP=1480,
        v_PPS_KdATPMgPPS=0.0549,
        v_PPS_KdMg=36.9,
        v_PPS_KdP=346,
        v_PPS_KdPEP=95.7,
        v_PPS_KdPYR=2740,
        v_PPS_KefADP=0.0283,
        v_PPS_KefAKG=0.274,
        v_PPS_KefATP=0.000628,
        v_PPS_KefOAA=0.796,
        v_PPS_Keq=200000,
        v_PPS_KmAMP=0.000384,
        v_PPS_KmATPMg=0.0549,
        v_PPS_KmP=84.4,
        v_PPS_KmPEP=20.7,
        v_PPS_KmPYR=0.229,
        v_PPS_Vmax=0.0163772,
        v_PPS_W=10,
        v_PPS_alpha=38900,
        v_MAD_KefrACCOA=1.83336,
        v_MAD_KefrASP=0.362142,
        v_MAD_KefrATP=88.9752,
        v_MAD_KefrCOA=0.268,
        v_MAD_KeftACCOA=0.197,
        v_MAD_KeftASP=0.583,
        v_MAD_KeftATP=0.26,
        v_MAD_KeftCOA=0.268,
        v_MAD_KirNAD=0.636457,
        v_MAD_KitNAD=0.990398,
        v_MAD_KmrMAL=0.212913,
        v_MAD_KmrMg=0.191871,
        v_MAD_KmrMn=0.272568,
        v_MAD_KmrNAD=1.36636,
        v_MAD_KmtMAL=0.093,
        v_MAD_KmtMg=2.37681,
        v_MAD_KmtMn=0.410198,
        v_MAD_KmtNAD=0.108,
        v_MAD_L0=19.9,
        v_MAD_Vmax=6.64269,
        v_MAD_n=4,
        v_PDH_Keq=3138.16,
        v_PDH_KmACCOA=10.174,
        v_PDH_KmCOA=0.00500461)
    params1 = np.fromiter(params.values(), dtype=float)
    return params1


def get_rest_of_params():
    params = collections.OrderedDict(
        v_PDH_KmHCO3=0.00545112,
        v_PDH_KmNAD=0.00999,
        v_PDH_KmNADH=6.63512,
        v_PDH_KmPYR=2,
        v_PDH_Vmax=961.706,
        v_GLT_KdACCOA0=0.699309,
        v_GLT_KdcsCIT=7.38128,
        v_GLT_KdcsCOA=0.00174282,
        v_GLT_KdcsOAA=0.154601,
        v_GLT_Keq=83067.1,
        v_GLT_Ki1AKG=0.0150083,
        v_GLT_Ki1NADH=0.000330313,
        v_GLT_Ki2AKG=0.256252,
        v_GLT_Ki2NADH=0.0504,
        v_GLT_KiATP=0.579939,
        v_GLT_KmACCOA0=0.119974,
        v_GLT_KmOAA0=0.00123458,
        v_GLT_KmcsCIT=1.15715,
        v_GLT_KmcsCOA=0.000096344,
        v_GLT_Vmax=57.0584,
        v_ACN_1_Keq=0.384503,
        v_ACN_1_KmACO=0.02,
        v_ACN_1_KmCIT=0.0628882,
        v_ACN_1_KmICIT=9.31352,
        v_ACN_1_Vmax=9.72413,
        v_ACN_2_Keq=3.49183,
        v_ACN_2_KmACO=0.02,
        v_ACN_2_KmCIT=0.0628882,
        v_ACN_2_KmICIT=9.31352,
        v_ACN_2_Vmax=9.86571,
        v_ICD_Keq=28.1631,
        v_ICD_KmAKG=0.038038,
        v_ICD_KmICIT=0.010989,
        v_ICD_KmNADP=0.005994,
        v_ICD_KmNADPH=0.000683333,
        v_ICD_kcat=2461.97,
        v_LPD_KdAKG=14.9386,
        v_LPD_KmAKG=0.020002,
        v_LPD_KmCOA=0.0760076,
        v_LPD_KmNAD=0.0980098,
        v_LPD_Vmax=0.0684413,
        v_LPD_alpha=16.4304,
        v_SK_Keq=1.15994,
        v_SK_KmADP=0.00868475,
        v_SK_KmATP=0.102321,
        v_SK_KmCOA=0.255019,
        v_SK_KmP=0.914709,
        v_SK_KmSUC=0.800744,
        v_SK_KmSUCCOA=0.0085,
        v_SK_Vmax=76.8163,
        v_SDH_KefFUM=0.067048,
        v_SDH_KefSUC=0.0322425,
        v_SDH_Keq=2250,
        v_SDH_KmFUM=1.36019,
        v_SDH_KmQ=0.00160718,
        v_SDH_KmQH2=0.00611663,
        v_SDH_KmSUC=0.805727,
        v_SDH_Vmax=1.56184,
        v_FUMA_Keq=4.99966,
        v_FUMA_KmFUM=0.6,
        v_FUMA_KmMAL=0.7,
        v_FUMA_Vmax=53.3414,
        v_MQO_Keq=9,
        v_MQO_KmMAL=0.435,
        v_MQO_KmOAA=75.8036,
        v_MQO_KmQ=0.0414,
        v_MQO_KmQH2=8.77942,
        v_MQO_Vmax=4.62283,
        v_MDH_Keq=100000,
        v_MDH_KiNAD=0.0233122,
        v_MDH_KiNADH=0.000196981,
        v_MDH_KiOAA=2.46446,
        v_MDH_KmMAL=0.86,
        v_MDH_KmNAD=0.64,
        v_MDH_KmNADH=0.003,
        v_MDH_KmOAA=0.001,
        v_MDH_Vmax=6.11492,
        v_ACEA_KdICITsuc=0.00489074,
        v_ACEA_KdPEP=1.05105,
        v_ACEA_KdPEPglx=0.0358555,
        v_ACEA_KdPEPicit=0.164263,
        v_ACEA_KdPGA3=0.8,
        v_ACEA_KdSUC=0.53053,
        v_ACEA_Keq=8.8088,
        v_ACEA_KmGLX=0.13013,
        v_ACEA_KmICIT=0.063063,
        v_ACEA_KmSUC=0.58941,
        v_ACEA_Vmax=1.52595,
        v_ACEB_Keq=230000,
        v_ACEB_KmACCOA=0.009,
        v_ACEB_KmCOA=10.5652,
        v_ACEB_KmGLX=0.021,
        v_ACEB_KmMAL=15.0572,
        v_ACEB_Vmax=0.352769,
        v_ACEK_1_Keq=888,
        v_ACEK_1_k=1.25457,
        v_ACEK_2_Keq=400,
        v_ACEK_2_k=0.0332,
        v_EDD_Keq=1000,
        v_EDD_KmKDPG=0.318316,
        v_EDD_KmPGN=0.6,
        v_EDD_Vmax=0.111359,
        v_EDA_Keq=0.5,
        v_EDA_KmGAP=86.678,
        v_EDA_KmKDPG=0.06,
        v_EDA_KmPYR=10,
        v_EDA_Vmax=0.0775241,
        v_NDHI_Keq=27.6193,
        v_NDHI_k=23.0735,
        v_NDHII_Keq=27.6193,
        v_NDHII_k=30.8306,
        v_NADPH_req_Keq=3.18998,
        v_NADPH_req_k=0.0,
        v_PNT_Keq=0.181891,
        v_PNT_k=2.49441,
        v_CYTBO_Keq=12.067,
        v_CYTBO_k=8.54045,
        v_SQR_Keq=0.94033,
        v_SQR_k=3.41617,
        v_ADK_Keq=0.962758,
        v_ADK_k=0.242256,
        v_ATP_NGAM_Keq=3.63369,
        v_ATP_NGAM_k=1.30166,
        v_ATP_SYN_Keq=49.8315,
        v_ATP_SYN_k=108.733,
        v_CYA_k=0.00414418,
        v_CYA_Keq=2591.19,
        v_CYA_KaeiiaP=0.180981,
        v_DOS_k=0.00828477,
        v_DOS_Keq=674.242,
        v_ACK_Keq=174,
        v_ACK_KmACE=7,
        v_ACK_KmACP=0.16,
        v_ACK_KmADP=0.5,
        v_ACK_KmATP=0.07,
        v_ACK_Vmax=7.23,
        v_ACS_KmACE=0.07,
        v_ACS_KmATP=0.1,
        v_ACS_KmCOA=0.01,
        v_ACS_Vmax=7.3,
        v_PTA_Keq=0.0053952,
        v_PTA_KiACCOA=0.2,
        v_PTA_KiACP=0.2,
        v_PTA_KiCOA=0.029,
        v_PTA_KiP=13.54,
        v_PTA_KmACP=0.7,
        v_PTA_KmP=6.1,
        v_PTA_Vmax=2.7,
        v_PTS_0_KmPEP=0.6,
        v_PTS_0_KmPYR=1,
        v_PTS_0_kF=12000,
        v_PTS_0_kR=0.6667,
        v_PTS_1_k1=200000,
        v_PTS_1_k2=0.04,
        v_PTS_2_k1=61000,
        v_PTS_2_k2=0.7705,
        v_PTS_3_k1=11000,
        v_PTS_3_k2=0.3636,
        v_PTS_4_KmG6P=2125.91,
        v_PTS_4_KmGLC=0.02,
        v_PTS_4_kF=4000,
        v_PTS_4_kR=2.5e-9,
        v_XCH_PYR_KmPYRx=0.01,
        v_XCH_PYR_Vmax=1.5,
        v_XCH_SUC_KmSUCx=0.2,
        v_XCH_SUC_Vmax=1.54,
        r_KdADPMg=1.27771,
        r_KdATPMg=0.0847634,
        r_KdFDPMg=5.81,
        v_XCH_GLC_P=0.00025,
        v_XCH_P_P=0.00025,
        v_XCH_ACE_P=0.00025,
        v_XCH_A=746000,
        v_GROWTH_KmG6P=1.20911,
        v_GROWTH_KmF6P=0.366423,
        v_GROWTH_KmGAP=0.024854,
        v_GROWTH_KmR5P=0.021234,
        v_GROWTH_KmE4P=1.63298,
        v_GROWTH_KmPGA3=0.0764619,
        v_GROWTH_KmPEP=0.457734,
        v_GROWTH_KmPYR=0.00463904,
        v_GROWTH_KmOAA=0.0248351,
        v_GROWTH_KmAKG=5.11989,
        v_GROWTH_KmACCOA=0.0494404,
        v_GROWTH_KmNADPH=3.59774,
        v_GROWTH_KmNAD=2.82239,
        v_GROWTH_KmATP=0.0468266,
        v_GROWTH_Vmax=9.74137,
        v_PIT_k=7.146,
        v_PIT_Kr=0.1,
        v_PIT_KmPp=0.025,
        v_PIT_KmP=12.18,
        v_ACE_OUT_k=10,
        v_ACE_OUT_Keq=1,
        PER_vol=0.25,
        ENV_vol=1
    )
    params2 = np.fromiter(params.values(), dtype=float)
    return params2


def new_param():
    new_param = [0.23, 0.36, 0.147, 0.28, 1.999, 0.515958, 2.32456, 0.0735264, 19.98, 9.009, 0.26026, 1998, 54.945,
                 0.000024975, 1.84615, 0.045954, 80.08, 0.014014, 0.00856856, 50.5505, 0.690009, 8.12187 - 05,
                 2.05205 - 05, 10.01, 2.002, 3.34334, 32.967, 9.99, 14.0851, 0.185253, 0.0237041, 0.146735, 4, 0.18981,
                 0.13001, 0.12012, 0.13001, 0.5, 21.6978, 0.270203, 0.01, 1.89301, 24.1843, 20, 0.2, 2.47265, 0.0110454,
                 3.69797, 0.017, 8.66573, 99.9925, 0.085416, 3.47737, 0.0113296, 2.45722, 16.1089, 0.565818, 1.9153,
                 0.115, 10.9934, 2.999, 0.1, 0.1, 11.7189, 0.449149, 0.158746, 0.150482, 9.33254, 1.53591, 0.0785955,
                 0.677374, 3.69117, 8.26406, 0.517585, 96.0333, 0.181056, 15.1403, 230.781, 0.224911, 0.039564,
                 0.465672, 0.2499, 11.3691, 0.326144, 5.56368 - 07, 0.054678, 0.11475, 50.4818, 0.74716, 4, 0.192, 0.02,
                 60000000000, 0.118525, 0.328629, 0.0274, 0.0168, 0.2658, 42.7572, 2.0001, 0.022977, 9.99, 11.5967,
                 58.8951, 9.7257, 0.116989, 0.00340034, 0.0440044, 0.0650065, 0.0129987, 0.139986, 0.00519948, 49.962,
                 6.41899, 0.049, 68.3828, 0.093, 45.1977, 4.08105, 1.5015, 0.872522, 0.893607, 6.00103, 0.330093,
                 0.67067, 3.09715, 4.40263, 8, 1.001, 40, 0.5005, 40.0002, 0.33033, 199.979, 0.11011, 119.992, 26.6266,
                 99.9991, 0.00122122, 0.256256, 1.12112, 0.384615, 1.35327, 0.75924, 0.356356, .16316, 6.60538, 48.4484,
                 0.856, 0.000255, 690, 0.304, 315, 0.043101, 0.00642, 100, 0.642, 0.00689, 16.5, 539, 0.0636141,
                 0.039039, 0.00001, 55.055, 0.000815, 0.215583, 4, 4.35404, 655.591, 17.9127, 0.0121991, 0.140029,
                 0.389183, 34.4277, 0.000448843, 9.99126, 0.0156251, 2.7475, 0.23002, 22.9834, 1.27598, 27.4729,
                 0.521945, 0.977374, 13.2064, 47.7563, 9.76119, 0.737283, 107.18, 149.705, 0.00219811, 13.0469,
                 0.663356, 3.20089, 0.00220031, 6.80995, 0.285131, 5.12497, 6.37209 - 06, 21.439, 4.00319, 1.88166,
                 0.04997, 0.0600418, 2.6319, 0.66966, 0.0699833, 8.08777, 1480, 0.0549, 36.9, 346, 95.7, 2740, 0.0283,
                 0.274, 0.000628, 0.796, 200000, 0.000384, 0.0549, 84.4, 20.7, 0.229, 0.0163772, 10, 38900, 1.83336,
                 0.362142, 88.9752, 0.268, 0.197, 0.583, 0.26, 0.268, 0.636457, 0.990398, 0.212913, 0.191871, 0.272568,
                 1.36636, 0.093, 2.37681, 0.410198, 0.108, 19.9, 6.64269, 4, 3138.16, 10.174, 0.00500461, 0.00545112,
                 0.00999, 6.63512, 2, 961.706, 0.699309, 7.38128, 0.00174282, 0.154601, 83067.1, 0.0150083, 0.000330313,
                 0.256252, 0.0504, 0.579939, 0.119974, 0.00123458, 1.15715, 0.000096344, 57.0584, 0.384503, 0.02,
                 0.0628882, 9.31352, 9.72413, 3.49183, 0.02, 0.0628882, 9.31352, 9.86571, 28.1631, 0.038038, 0.010989,
                 0.005994, 0.000683333, 2461.97, 14.9386, 0.020002, 0.0760076, 0.0980098, 0.0684413, 16.4304, 1.15994,
                 0.00868475, 0.102321, 0.255019, 0.914709, 0.800744, 0.0085, 76.8163, 0.067048, 0.0322425, 2250,
                 1.36019, 0.00160718, 0.00611663, 0.805727, 1.56184, 4.99966, 0.6, 0.7, 53.3414, 9, 0.435, 75.8036,
                 0.0414, 8.77942, 4.62283, 100000, 0.0233122, 0.000196981, 2.46446, 0.86, 0.64, 0.003, 0.001, 6.11492,
                 0.00489074, 1.05105, 0.0358555, 0.164263, 0.8, 0.53053, 8.8088, 0.13013, 0.063063, 0.58941, 1.52595,
                 230000, 0.009, 10.5652, 0.021, 15.0572, 0.352769, 888, 11.25457, 400, 20.0332, 1000, 0.318316, 0.6,
                 0.111359, 0.5, 86.678, 0.06, 10, 0.0775241, 27.6193, 23.0735, 27.6193, 30.8306, 3.18998, 0.0, 0.181891,
                 2.49441, 12.067, 8.54045, 0.94033, 3.41617, 0.962758, 0.242256, 3.63369, 1.30166, 49.8315, 108.733,
                 0.00414418, 2591.19, 0.180981, 0.00828477, 674.242, 174, 7, 0.16, 0.5, 0.07, 7.23, 0.07, 0.1, 0.01,
                 7.3, 0.0053952, 0.2, 0.2, 0.029, 13.54, 0.7, 6.1, 2.7, 0.6, 1, 12000, 0.6667, 200000, 0.04, 61000,
                 0.7705, 11000, 0.3636, 2125.91, 0.02, 4000, 2.5 - 9, 0.01, 1.5, 0.2, 1.54, 1.27771, 0.0847634, 5.81,
                 0.00025, 0.00025, 0.00025, 746000, 1.20911, 0.366423, 0.024854, 0.021234, 1.63298, 0.0764619, 0.457734,
                 0.00463904, 0.0248351, 5.11989, 0.0494404, 3.59774, 2.82239, 0.0468266, 9.74137, 7.146, 0.1, 0.025,
                 12.18, 10, 1, 0.25, 1]
    return new_param


def combine_params():
    params1 = get_some_params()
    params2 = get_rest_of_params()
    return np.append(params1, params2)


def flux(met, param):
    fluxes = Flux_cal_object.flx_cal(met, param)
    return fluxes


def rhs(t, met, param):
    rhs_base = ThEcoli.derivs(met, param)
#    rhs = np.delete(rhs_base, 0) # remove the mystery 0.0 at the beginning
    return rhs_base


def ode_sim(t_final):
    y0 = get_initial()  # initial conditions from Parameter.py
    t0 = 0.0
    param = new_param()

    ecoli_ode = lambda t, x: rhs(t, x, param)
    model = Explicit_Problem(ecoli_ode, y0, t0)  # Create an Assimulo problem
    model.name = 'E Coli ODE'
    sim = CVode(model)  # Create the solver CVode

    sim.rtol = 1e-8
    sim.atol = 1e-8
#    pdb.set_trace()
    t, y = sim.simulate(t_final)  # Use the .simulate method to simulate and provide the final time

    # Plot
    met_labels = ["ACCOA", "ACEx", "ACO", "ACP", "ADP", "AKG", "AMP", "ASP", "ATP", "BPG", "CAMP", "CIT", "COA", "CYS",
                  "DAP", "E4P", "ei", "eiia", "eiiaP", "eiicb", "eiicbP", "eiP", "F6P", "FDP", "FUM", "G6P", "GAP",
                  "GL6P", "GLCx", "GLX", "HCO3", "hpr", "hprP", "icd", "icdP", "ICIT", "KDPG", "MAL", "MG", "MN", "NAD",
                  "NADH", "NADP", "NADPH", "OAA", "P", "PEP", "PGA2", "PGA3", "PGN", "PYR", "PYRx", "Q", "QH2", "R5P",
                  "RU5P", "S7P", "SUC", "SUCCOA", "SUCx", "tal", "talC3", "tkt", "tktC2", "X5P", "Px", "Pp", "GLCp",
                  "ACEp", "ACE", "Hc", "Hp", "FAD", "FADH2", "O2", "FEED"]

    for i in y:
        if i.any() < 0:
            print i

    plt.plot([t, t], [y[:, i] for i in [4, 9]], label=["ADP", "ATP"])
    plt.title('Metabolite Concentrations Over Time')
    plt.xlabel('Time')
    plt.ylabel('Concentration')
    plt.legend()
    plt.savefig('concentration.png')

    return model, sim


# fluxes = flux(get_initial(), new_param())
# print(fluxes)

# what the fuck?
ode_sim(20000)
